language: python

python:
  - 2.7

matrix:
  include:
    - python: 2.7
      env:
        - TESTS="true"
    - python: 3.6
      dist: xenial
      env:
        - TESTS="true"
    - python: 3.7
      dist: xenial
      env:
        - TESTS="true"
    - python: 3.8
      dist: xenial
      env:
        - TESTS="true"
    - python: 3.8
      dist: xenial
      env:
        - LINT="true"
    - os: osx
      language: generic
      python: 3.7
      env: TRAVIS_PYTHON_VERSION=3.7
    - python: 3.9-dev
      dist: xenial
      sudo: true
      env:
        - TESTS="true"
    - python: 3.7
      env:
        - DOCS="true"
        # Doctr deploy key for deshaw/pyflyby
        - secure: "HMHUdqYOkqhIYDEocBhoshKJNSiuOUbTrQk8veCXEkOQJmiNSTmRUP6x0QIRnW+r1DgwU/LoEyMrOdTAmi4zBCaGofl7oaooy4CxOJ1snA69sU75esD3trq8XMTh4bxHAIoqSsA78QeqqIK1jDSlIvuZ5MWWAgbn6HKzQ24cP/lOZ1kpgUKWTdZ20aKorPI+8YhG3ey3Zag9OkPwNnyCFZGpXpP9BC3ng+ohWdlwAjGezW4eqpX1wjp1zbF98DUIXVOFJ7IYxfJondn7P+51GnjVvRxVO5szSWIW92z6ybwUxu+NzJL0PSUx8Bz36OcghD7ssOCe/NbKBoNLiSIrZ11xCAj5Ms5TRDe+JFVrPfNByRW48R5Q/VAXv8AvSShgO1XvcIrVABUxcWwHoszFt1cV7waZduYQu13PrW5Uh/wLScq67YQ9SxK79jdXryBWTJOeH/86AJtTLdoZPPuhheAZgyGwKi7XkfBwXyTbIrghpUjuNJQw3OeQ3SBgIorCfL0IlQrF3qza9ugJmP03J5KopXXJ+o12LS8e8zjpSifIsHnf6RkROKME4MgBjERVzDftZts/n9z2dDQpbJBpuxgQSG0RocDoOiMzA8cbVKLpV4sNNX0fwfiDDgKIaiEP3xdSNtHdpa5Lx+np8h2vX+/p14rFl5kA1ygdsIEIUxg="

before_install:
  - |
    # install Python on macOS
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      env | sort
      if ! which python$TRAVIS_PYTHON_VERSION; then
        HOMEBREW_NO_AUTO_UPDATE=1 brew tap minrk/homebrew-python-frameworks
        HOMEBREW_NO_AUTO_UPDATE=1 brew cask install python-framework-${TRAVIS_PYTHON_VERSION/./}
      fi
      python3 -m pip install virtualenv
      python3 -m virtualenv -p $(which python$TRAVIS_PYTHON_VERSION) ~/travis-env
      source ~/travis-env/bin/activate
    fi
  - python --version

install:
  - set -e
  - pip install -U pip
  # Install prompt-toolkit from git until a release is made with
  # PROMPT_TOOLKIT_NO_CPR environment variable support.
  # Install jupyter_console from
  # https://github.com/jupyter/jupyter_console/pull/187 until it is included
  # in a release.
  # Install ipykernel from master until a version after 5.1.2 is released.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        pip install -U "pexpect>=3.3" pyflakes pytest epydoc rlipython requests jupyter flaky flake8 wheel;
    else
        pip install -U "pexpect>=3.3" pyflakes pytest rlipython requests jupyter flaky flake8 'notebook<6.1' 'prompt_toolkit<3.0.6' wheel 'jupyter_console>=6.2';
    fi
  - if [[ "${DOCS}" == "true" ]]; then
        pip install sphinx sphinx_rtd_theme sphinx-autodoc-typehints;
    fi
  - pip list

script:
  # - set -x
  - |
    # install Python on macOS
    if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then
      set -e
      shopt -s extglob globstar
    fi
  - python setup.py sdist bdist_wheel
  # pyflakes all files except for known_imports/*, etc/*, and __init__.py,
  # which are all unused imports. We use flake8 so we can use noqa if
  # necessary.
  - |
    if [[ "${LINT}" == "true" ]]; then
        flake8 --exclude known_imports,etc,__init__.py --select=F;
    fi
  # Test for invalid escape sequences (will be syntax errors in a future
  # Python version)
  - |
    if [[ "${TESTS}" == "true" ]]; then
        python -We:invalid -m compileall -f -q lib/ etc/;
    fi
  - |
    if [[ "${TESTS}" == "true" ]]; then
        export DEBUG_TEST_PYFLYBY=1;
    fi
  - |
    if [[ "${TESTS}" == "true" ]]; then
        pytest --doctest-modules lib tests;
    fi
  # Smoke test tidy-imports on the codebase. This only fails if there is an
  # exception from a bug, but we could also make it fail if there are imports
  # that need to be tidied.
  - |
    if [[ "${TESTS}" == "true" ]]; then
        ./bin/tidy-imports -d lib/python/ tests/;
    fi
  - |
    if [ "${DOCS}" = "true" ]; then
        cd doc;
        make html;
        cd ..;
        pip install doctr;
        doctr deploy .;
    fi
